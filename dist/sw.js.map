{"version":3,"sources":["sw.js"],"names":["CACHE_NAME","CACHE_IMAGES","STATIC_ASSETS","window","navigator","console","servePhoto","request","storageUrl","url","replace","caches","open","then","cache","match","response","fetch","networkResponse","put","clone","addEventListener","serviceWorker","register","registration","log","scope","addAll","err","self","event","requestUrl","URL","respondWith","pathname","endsWith"],"mappings":"aAAA,IAAMA,WAAa,oBACbC,aAAe,2BAAfA,eAGF,IADEC,kBAGF,mBASJ,yBACI,iBACAC,aACIC,wBACI,uBACAC,8BAiEX,SAAAC,WAAAC,GAZG,IAAIC,EAAaD,EAAQE,IAAIC,QAAQ,cAAe,IAEpD,OAAOC,OAAOC,KAAKX,cAAcY,KAAK,SAAAC,GAClC,OAAOA,EAAMC,MAAMP,GAAYK,KAAK,SAAAG,GAChC,OAAIA,GAEGC,MAAMV,GAASM,KAAK,SAAAK,GAEvB,OADAJ,EAAMK,IAAIX,EAAYU,EAAgBE,SAC/BF,QAzDd,kBANDd,WAOHD,OARDkB,iBAAA,OAAA,WASHjB,UAAAkB,cAAAC,SAAA,UAAAV,KAAA,SAAAW,GAEDnB,QAAAoB,IAAA,qDAAAD,EAAAE,QACKL,SAAAA,GAGOhB,QAAOS,IAAMa,sCAAbC,OAHZC,KAAKR,iBAAiB,UAAW,SAACS,GAW9BA,EAAIC,UATApB,OAAOC,KAAKZ,YAAYa,KAAK,SAACC,GAW9B,OAAAA,EAAAa,OAAAzB,oBALR2B,KAAKR,iBAAiB,QAAS,SAACS,GAWxB,IAAAC,EAAA,IAAAC,IAAAF,EAAAvB,QAAAE,KAEIqB,GAAAA,EAAMG,SAAY3B,SAAAA,OAAiBC,CAG1C,GAAA,MAAAwB,EAAAG,SAED,YAXQJ,EAAMG,YAAYtB,OAAOI,MAAM,MAevCe,GAAMG,EACFtB,SAAOC,SAAKZ,UAAiB+B,EAAAG,SAASC,SAAA,QAE9B,YADJL,EAAOhB,YAAYgB,WAAZA,EAAgCvB,UAWnDuB,EAASxB,YACDE,OAAAA,KAAAA,YAAaK,KAAYH,SAAAA,GAZrB,OAAOI,EAAMC,MAAMe,EAAMvB,SAASM,KAAK,SAAAG,GAcxCL,OAAYV,GAAZgB,MAAAa,EAA+BvB,SAAAM,KAAS,SAAAG,GAEnCA,OADDF,EAAAK,IAAYX,EAAAA,QAAiBQ,EAAAI,SAClBJ","file":"sw.js","sourcesContent":["const CACHE_NAME = 'restaurant-app-v1';\nconst CACHE_IMAGES = 'restaurant-app-images-v1';\n\nconst STATIC_ASSETS = [\n    '/',\n    'restaurant.html',\n    'css/app-main.css',\n    'css/app-restaurant.css',\n    'js/dbhelper.js',\n    'js/main.js',\n    'js/restaurant_info.js',\n    'js/vendor/idb.min.js',\n    'js/vendor/lazysizes.min.js'\n];\n\n// Check for service worker and do sw registration\nif ('serviceWorker' in navigator) {\n    window.addEventListener('load', () => {\n        navigator.serviceWorker.register('/sw.js').then(registration => {\n            // Registration was successful\n            console.log('ServiceWorker registration successful with scope: ', registration.scope);\n        }, function(err) {\n            // registration failed :(\n            console.log('ServiceWorker registration failed: ', err);\n        });\n    });\n}\n\n// Cache static assets on install\nself.addEventListener('install', (event) => {\n    event.waitUntil(\n        caches.open(CACHE_NAME).then((cache) => {\n            return cache.addAll(STATIC_ASSETS);\n        }));\n});\n\n\nself.addEventListener('fetch', (event) => {\n    const requestUrl = new URL(event.request.url);\n\n    if (requestUrl.origin === location.origin) {\n\n        // index.html\n        if (requestUrl.pathname === '/') {\n            event.respondWith(caches.match('/'));\n            return;\n        }\n\n        // add images to photo cache\n        if (requestUrl.pathname.endsWith('.webp') || requestUrl.pathname.endsWith('.jpg')) {\n            event.respondWith(servePhoto(event.request));\n            return;\n        }\n    }\n\n    // cache default method\n    // https://jakearchibald.com/2014/offline-cookbook/#on-network-response\n    // If the request is in the cache, return it\n    // else go to the network, cache the response and return it at the same time\n    event.respondWith(\n        caches.open(CACHE_NAME).then(cache => {\n            return cache.match(event.request).then(response => {\n                return response || fetch(event.request).then(response => {\n                    cache.put(event.request, response.clone());\n                    return response;\n                });\n            });\n        })\n    );\n});\n\n\nfunction servePhoto(request) {\n    var storageUrl = request.url.replace(/-\\d+\\.webp$/, '');\n\n    return caches.open(CACHE_IMAGES).then(cache => {\n        return cache.match(storageUrl).then(response => {\n            if (response) return response;\n\n            return fetch(request).then(networkResponse => {\n                cache.put(storageUrl, networkResponse.clone());\n                return networkResponse;\n            });\n        });\n    });\n}"]}