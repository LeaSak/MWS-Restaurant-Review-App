{"version":3,"sources":["index.js"],"names":["idbApp","idb","open","upgradeDb","oldVersion","idbPromise","console","log","createObjectStore","keyPath","restaurants","then","db","addRestaurants","store","transaction","objectStore","map","restaurant","Promise","all","catch","error","tx","abort","fetchRestaurantsFromDB"],"mappings":"aAKA,IAAMA,OAAU,WAAVA,IAAAA,EAAUC,IAAMC,KAAA,cAAA,EAAA,SAAAC,GAGd,OAAQA,EAAUC,YADhBC,KAAAA,EAIM,KAAA,EACAC,QAAAC,IAAA,yCACJJ,EAAAK,kBAAA,eAAAC,QAAA,UAiCR,OAAAJ,WAAOA,EACHA,eAxCJ,SAAAK,GAaI,OAAOL,EAAWM,KAAK,SAACC,GADtBC,GAAAA,EAAAA,CAGU,IACHC,EADGF,EAAAG,YAAA,cAAA,aACHC,YAAA,eAEKF,OAAAA,QAAWE,IAAAA,EAAYC,IAAA,SAAAC,GAEtBC,OACNb,QAAQC,IAAI,kCADEa,EAAIV,IAAAA,SAAAW,MAAnB,SAAAC,GAPDC,GAYIC,QACAA,QAAHF,MAAAA,MAeRT,uBAV2B,WAAzBY,OAAAA,EAAAA,KAAAA,SAAAA,GAGE,OAFGpB,EAAWM,YAAK,cAAQ,YACbI,YAAY,eACZQ,aApCV","file":"index.js","sourcesContent":["/**\n * IndexedDB \n *\n */\n\nconst idbApp = (() => {\n\n    const idbPromise = idb.open('restaurants', 2, (upgradeDb) => {\n        switch (upgradeDb.oldVersion) {\n            case 0:\n                // a placeholder case so that the switch block will\n                // execute when the database is first created\n                // (oldVersion is 0)\n            case 1:\n                console.log('Creating the restaurants object store');\n                upgradeDb.createObjectStore('restaurants', { keyPath: 'id' });\n        };\n    });\n\n    const addRestaurants = (restaurants) => {\n        return idbPromise.then((db) => {\n                if (!db) {\n                    return;\n                }\n                const tx = db.transaction('restaurants', 'readwrite');\n                const store = tx.objectStore('restaurants');\n\n                return Promise.all(restaurants.map(restaurant => {\n                \tconsole.log('adding restaurants to database');\n                    return store.put(restaurant);\n                }));\n            })\n            .catch((error) => {\n                tx.abort();\n                console.error(error);\n            });\n    }\n\n    const fetchRestaurantsFromDB = () => {\n        return idbPromise.then((db) => {\n            const tx = db.transaction('restaurants', 'readonly');\n            const store = tx.objectStore('restaurants');\n            return store.getAll();\n        });\n    }\n\n    return {\n        idbPromise: idbPromise,\n        addRestaurants: addRestaurants,\n        fetchRestaurantsFromDB: fetchRestaurantsFromDB\n    };\n\n})();"]}